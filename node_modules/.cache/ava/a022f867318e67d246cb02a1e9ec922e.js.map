{"version":3,"sources":["renter.js"],"names":["t","input","name","money","months","property","res","post","send","is","status","body","deepEqual","creation","console","log","newInput","renterID","data"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,mBAAK,cAAL,EAAqB,MAAMA,CAAN,IAAW;AAC5B,UAAMC,QAAQ,EAACC,MAAK,QAAN,EAAgBC,OAAO,EAAvB,EAA2BC,QAAQ,CAAC,KAAD,CAAnC,EAA4CC,UAAU,CAAC,OAAD,CAAtD,EAAd;;AAEA,UAAMC,MAAM,MAAM,wCACbC,IADa,CACR,aADQ,EAEbC,IAFa,CAERP,KAFQ,CAAlB;;AAIAD,MAAES,EAAF,CAAKH,IAAII,MAAT,EAAiB,GAAjB;AACAV,MAAES,EAAF,CAAKH,IAAIK,IAAJ,CAAST,IAAd,EAAoBD,MAAMC,IAA1B;AACAF,MAAES,EAAF,CAAKH,IAAIK,IAAJ,CAASR,KAAd,EAAqBF,MAAME,KAA3B;AACAH,MAAEY,SAAF,CAAYN,IAAIK,IAAJ,CAASP,MAArB,EAA6BH,MAAMG,MAAnC;AACAJ,MAAEY,SAAF,CAAYN,IAAIK,IAAJ,CAASN,QAArB,EAA+BJ,MAAMI,QAArC;AACH,CAZD;;AAcA,mBAAK,eAAL,EAAsB,MAAML,CAAN,IAAW;AAC7B,UAAMC,QAAQ,EAACC,MAAK,QAAN,EAAgBC,OAAO,EAAvB,EAA2BC,QAAQ,CAAC,KAAD,CAAnC,EAA4CC,UAAU,CAAC,OAAD;AACpE;;AADc,KAAd,CAGA,MAAMQ,WAAW,CAAC,MAAM,wCACnBN,IADmB,CACd,aADc,EAEnBC,IAFmB,CAEdP,KAFc,CAAP,EAGZU,IAHL;AAII;AACA;;AAEJG,YAAQC,GAAR,CAAYF,QAAZ;;AAEA;AACA,UAAMG,WAAW,EAACC,UAAUJ,SAASI,QAApB,EAA8BC,MAAM,EAAChB,MAAK,QAAN,EAAgBC,OAAO,EAAvB,EAA2BC,QAAQ,CAAC,UAAD,CAAnC,EAAiDC,UAAU,CAAC,OAAD,CAA3D;;AAErD;;AAFiB,KAAjB,CAIA,MAAMC,MAAM,MAAM,wCACbC,IADa,CACR,cADQ;AAEd;AAFc,KAGbC,IAHa,CAGRQ,QAHQ,CAAlB;AAII;;AAEJF,YAAQC,GAAR,CAAYT,IAAIK,IAAhB;;AAEAX,MAAES,EAAF,CAAKH,IAAII,MAAT,EAAiB,GAAjB;AACA;AACAV,MAAES,EAAF,CAAKH,IAAIK,IAAJ,CAASR,KAAd,EAAqBa,SAASb,KAA9B;AACA;AACA;AACH,CA/BD;;AAkCA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"renter.js","sourcesContent":["import test from 'ava'\nimport request from 'supertest'\nimport app from '../../app'\n\ntest('Add a renter', async t => {\n    const input = {name:'Tester', money: 50, months: ['Jan'], property: [\"House\"]}\n\n    const res = await request(app)\n        .post('/renter/add')\n        .send(input)\n    \n    t.is(res.status, 200)\n    t.is(res.body.name, input.name)\n    t.is(res.body.money, input.money) \n    t.deepEqual(res.body.months, input.months)     \n    t.deepEqual(res.body.property, input.property)  \n})\n\ntest('Edit a renter', async t => {\n    const input = {name:'Tester', money: 50, months: ['Jan'], property: [\"House\"]}\n    // const newInput = {name:'Tester', money: 50, months: ['NewMonth'], property: [\"House\"]}\n\n    const creation = (await request(app)\n        .post('/renter/add')\n        .send(input))\n        .body\n        //why do i have to put body here?  \n        // is it related to why i don't have to put creation.body.renterID?\n    \n    console.log(creation)\n\n    // const newInput = (`${creation.renterID}`, {name:'Tester', money: 50, months: ['NewMonth'], property: [\"House\"]})\n    const newInput = {renterID: creation.renterID, data: {name:'Tester', money: 50, months: ['NewMonth'], property: [\"House\"]}}\n\n    // console.log(newInput.data)\n\n    const res = await request(app)\n        .post('/renter/edit')\n        // .send(`${creation.renterID}`, newInput)\n        .send(newInput)\n        // .send(newInput)\n\n    console.log(res.body)\n\n    t.is(res.status, 200)\n    // t.is(res.body.name, newInput.name)\n    t.is(res.body.money, newInput.money) \n    // t.deepEqual(res.body.months, newInput.months) \n    // t.deepEqual(res.body.properties, newInput.properties) \n})\n\n\n// test('Add a renter', async t => {\n//     const input = {name:'Test', cost: 10}\n\n//     const res = await request(app)\n//         .post('/property/add')\n//         .send(input)\n    \n//     t.is(res.status, 200)\n//     t.is(res.body.name, input.name)\n//     t.is(res.body.cost, input.cost)\n// })"]}