{"version":3,"sources":["renter.js"],"names":["t","input","name","money","months","property","res","post","send","is","status","body","deepEqual","creation","newInput","renterID","data","properties","del"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,mBAAK,cAAL,EAAqB,MAAMA,CAAN,IAAW;AAC5B,UAAMC,QAAQ,EAACC,MAAK,QAAN,EAAgBC,OAAO,EAAvB,EAA2BC,QAAQ,CAAC,KAAD,CAAnC,EAA4CC,UAAU,CAAC,OAAD,CAAtD,EAAd;;AAEA,UAAMC,MAAM,MAAM,wCACbC,IADa,CACR,aADQ,EAEbC,IAFa,CAERP,KAFQ,CAAlB;;AAIAD,MAAES,EAAF,CAAKH,IAAII,MAAT,EAAiB,GAAjB;AACAV,MAAES,EAAF,CAAKH,IAAIK,IAAJ,CAAST,IAAd,EAAoBD,MAAMC,IAA1B;AACAF,MAAES,EAAF,CAAKH,IAAIK,IAAJ,CAASR,KAAd,EAAqBF,MAAME,KAA3B;AACAH,MAAEY,SAAF,CAAYN,IAAIK,IAAJ,CAASP,MAArB,EAA6BH,MAAMG,MAAnC;AACAJ,MAAEY,SAAF,CAAYN,IAAIK,IAAJ,CAASN,QAArB,EAA+BJ,MAAMI,QAArC;AACH,CAZD;;AAcA,mBAAK,eAAL,EAAsB,MAAML,CAAN,IAAW;AAC7B,UAAMC,QAAQ,EAACC,MAAK,QAAN,EAAgBC,OAAO,EAAvB,EAA2BC,QAAQ,CAAC,KAAD,CAAnC,EAA4CC,UAAU,CAAC,OAAD,CAAtD,EAAd;;AAEA,UAAMQ,WAAW,CAAC,MAAM,wCACnBN,IADmB,CACd,aADc,EAEnBC,IAFmB,CAEdP,KAFc,CAAP,EAGZU,IAHL;AAII;AACA;;AAEJ,UAAMG,WAAW,EAACC,UAAUF,SAASE,QAApB,EAA8BC,MAAM,EAACd,MAAK,QAAN,EAAgBC,OAAO,EAAvB,EAA2BC,QAAQ,CAAC,UAAD,CAAnC,EAAiDC,UAAU,CAAC,OAAD,CAA3D,EAApC,EAAjB;;AAEA,UAAMC,MAAM,MAAM,wCACbC,IADa,CACR,cADQ,EAEbC,IAFa,CAERM,QAFQ,CAAlB;;AAIAd,MAAES,EAAF,CAAKH,IAAII,MAAT,EAAiB,GAAjB;AACAV,MAAES,EAAF,CAAKH,IAAIK,IAAJ,CAAST,IAAd,EAAoBY,SAASE,IAAT,CAAcd,IAAlC;AACAF,MAAES,EAAF,CAAKH,IAAIK,IAAJ,CAASR,KAAd,EAAqBW,SAASE,IAAT,CAAcb,KAAnC;AACAH,MAAEY,SAAF,CAAYN,IAAIK,IAAJ,CAASP,MAArB,EAA6BU,SAASE,IAAT,CAAcZ,MAA3C;AACAJ,MAAEY,SAAF,CAAYN,IAAIK,IAAJ,CAASM,UAArB,EAAiCH,SAASE,IAAT,CAAcC,UAA/C;AACH,CArBD;;AAuBA,mBAAK,iBAAL,EAAwB,MAAMjB,CAAN,IAAW;AAC/B,UAAMC,QAAQ,EAACC,MAAK,QAAN,EAAgBC,OAAO,EAAvB,EAA2BC,QAAQ,CAAC,KAAD,CAAnC,EAA4CC,UAAU,CAAC,OAAD,CAAtD,EAAd;;AAEA,UAAMQ,WAAW,CAAC,MAAM,wCACnBN,IADmB,CACd,aADc,EAEnBC,IAFmB,CAEdP,KAFc,CAAP,EAGZU,IAHL;;AAKA,UAAMO,MAAM,MAAM,wCACbX,IADa,CACR,gBADQ,EAEbC,IAFa,CAERK,QAFQ,CAAlB;AAGI;AACA;AACA;;AAEJb,MAAES,EAAF,CAAKS,IAAIR,MAAT,EAAiB,GAAjB;AACH,CAhBD","file":"renter.js","sourcesContent":["import test from 'ava'\nimport request from 'supertest'\nimport app from '../../app'\n\ntest('Add a renter', async t => {\n    const input = {name:'Tester', money: 50, months: ['Jan'], property: [\"House\"]}\n\n    const res = await request(app)\n        .post('/renter/add')\n        .send(input)\n    \n    t.is(res.status, 200)\n    t.is(res.body.name, input.name)\n    t.is(res.body.money, input.money) \n    t.deepEqual(res.body.months, input.months)     \n    t.deepEqual(res.body.property, input.property)  \n})\n\ntest('Edit a renter', async t => {\n    const input = {name:'Tester', money: 50, months: ['Jan'], property: [\"House\"]}\n\n    const creation = (await request(app)\n        .post('/renter/add')\n        .send(input))\n        .body\n        //why do i have to put body here?  \n        // is it related to why i don't have to put creation.body.renterID?\n    \n    const newInput = {renterID: creation.renterID, data: {name:'Tester', money: 50, months: ['NewMonth'], property: [\"House\"]}}\n\n    const res = await request(app)\n        .post('/renter/edit')\n        .send(newInput)\n\n    t.is(res.status, 200)\n    t.is(res.body.name, newInput.data.name)\n    t.is(res.body.money, newInput.data.money) \n    t.deepEqual(res.body.months, newInput.data.months) \n    t.deepEqual(res.body.properties, newInput.data.properties) \n})\n\ntest('Delete a renter', async t => {\n    const input = {name:'Tester', money: 50, months: ['Jan'], property: [\"House\"]}\n\n    const creation = (await request(app)\n        .post('/renter/add')\n        .send(input))\n        .body\n    \n    const del = await request(app)\n        .post('/renter/delete')\n        .send(creation)\n        //why in class did we use .delete instead of .post('/renter/delete')\n        //maybe practice that later \n        //and also doing the thing where you try to find it and want to make sure it's really gone\n\n    t.is(del.status, 200)\n})\n"]}